{"version":3,"file":"static/js/172.8b38474c.chunk.js","mappings":"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","sources":["modules/mask-questions.js","UI/components/EmailForm2.js","UI/components/ResultContent2.js","modules/mask-product-result.js","UI/templates/SurveyMask.js"],"sourcesContent":["const Questions = [\n    {\n        question: \"How does your skin feel most days?\",\n        questionNote: \"*Choose 1\",\n        answers: ['Dry and flaky', 'Tends to get oily throughout the day', 'A combination of oily and dry on different areas', 'Red and sensitive with uneven texture', 'Normal and flawless'],\n        type: 'SingleChoice',\n        inputType: 'Button',\n        showAllLabel: null,\n        category: '',\n        btnClass: 'btn__choice-bigger',\n    },\n    {\n        question: \"About how many glasses of water do you drink per day?\",\n        questionNote: \"*Choose 1\",\n        answers: ['3 or less', '4 to 6', '7 to 9', 'More than 10'],\n        type: 'SingleChoice',\n        inputType: 'Button',\n        showAllLabel: null,\n        category: '',\n        btnClass: 'btn__choice-bigger',\n        buttonType: 'full',\n    },\n    {\n        question: \"What is your local climate like?\",\n        questionNote: \"*Choose 1\",\n        answers: ['Dry', 'Neutral', 'Humid & Hot', 'Seasonal'],\n        type: 'SingleChoice',\n        inputType: 'Button',\n        showAllLabel: null,\n        category: '',\n        btnClass: 'btn__choice-bigger',\n        buttonType: 'full',\n    },\n    {\n        question: \"What is your main concern?\",\n        questionNote: \"*Choose 1\",\n        answers: ['Clogged and enlarged pores', 'Dull skin with fine lines and wrinkles', 'Dark spots or hyperpigmentation', 'Dehydrated and flaky skin', 'Acne and/or skin inflammation', 'Excess oil'],\n        type: 'SingleChoice',\n        inputType: 'Button',\n        showAllLabel: null,\n        category: '',\n        btnClass: 'btn__choice-bigger',\n    }\n];\n\nexport default Questions;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ReactComponent as Check } from '../../assets/check.svg';\nimport { validateEmail } from '../../modules/Utils';\n\nconst EmailForm = (props) => {\n    const { onSubmit, skipEmail } = props;\n\n    const [email, setEmail] = useState('');\n    const [isValidEmail, setIsValidEmail] = useState(false);\n    const [termChecked, setTermCheck] = useState(false);\n\n    const onEmailChange = (e) => {\n        setIsValidEmail(validateEmail(e.target.value));\n        setEmail(e.target.value);\n    };\n\n    const onCheckTerm = (e) => {\n        setTermCheck(e.target.checked);\n    }\n\n    const submitEmail = (e) => {\n        onSubmit(email);\n        e.preventDefault();\n    }\n\n    return (\n        <div className=\"col-12 col-lg-6 mt-4 pt-0 pt-lg-4 text-center\">\n            <p className=\"h1 mb-0\">We found your perfect mask</p>\n            <p className=\"mt-2 h4 fw-normal mx-3\" dangerouslySetInnerHTML={{ __html: \"We've got your routine ready! Enter your email to view your results and get 15% OFF your first purchase.\" }}></p>\n            <div className=\"col-12 col-lg-8 ms-auto me-auto mt-4\">\n                <div className=\"form-group\">\n                    <form onSubmit={submitEmail}>\n                        <input type=\"email\" className=\"form-control bg-light-gray\" placeholder=\"E-mail address\" onChange={onEmailChange}/>\n                        <div className=\"d-flex pb-2 justify-content-center align-items-center mt-3\">\n                            <label className='checkbox-number align-items-center pt-0 font-size-sm justify-content-center' htmlFor='agree'>\n                                <input className='d-none' type=\"checkbox\" value=\"true\" id='agree' onChange={onCheckTerm} />\n                                <div className={`${termChecked ? 'bg-primary border-0' : '' } custom-check me-1 mt-0 form-check-input text-center d-flex align-items-center justify-content-center`}>\n                                    <Check className={`${!termChecked ? 'd-none' : ''} svg text-white`}/>\n                                </div>\n                            </label>\n                            <label className=\"font-size-sm mx-1\" dangerouslySetInnerHTML={{ __html: 'I agree to <a href=\"https://www.sandandsky.com/pages/privacy-policy\">Privacy Policy</a> & <a href=\"https://www.sandandsky.com/pages/term-condition\">Terms & Conditions</a>' }} htmlFor=\"agree\"></label>\n                        </div>\n                        <p className=\"font-size-sm\">By signing up, you agree to receive exclusive offers via email. Sign up not required for purchase. Opt out any time.</p>\n                        <button type=\"submit\" className=\"btn btn-lg d-block btn-primary mb-3 w-100 mt-2\" disabled={!isValidEmail || !termChecked}>Submit</button>\n                    </form>\n                </div>\n            </div>\n            <div className=\"footer-action w-100 pb-2 bg-white mt-4\">\n                <a href=\"#\" className=\"d-block text-underline text-black w-100 mt-5 mb-lg-4\" onClick={skipEmail}>Skip this step</a>\n            </div>\n        </div>\n    )\n};\n\nEmailForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    skipEmail: PropTypes.func.isRequired,\n};\n\nexport default EmailForm;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ResultContent = (props) => {\n    const { viewMyResult } = props;\n\n    return (\n        <div className=\"col-12 col-lg-6 mt-4 pt-0 pt-lg-4 text-center\">\n            <p className=\"h1\">Thanks!<br/>Here is your promo code:</p>\n            <div className=\"col-12 col-lg-8 ms-auto me-auto mt-2\">\n                <span className='h1 px-4 py-1 text-primary rounded p-2 bg-light-gray d-inline-block bg-primary-light'>MASK15</span>\n                <p className='mt-2'>No minimum spend, 15% off single full-sized masks only!</p>\n                <button className=\"mt-2 btn btn-lg btn-primary w-100\" onClick={viewMyResult}>View my results</button>\n            </div>\n        </div>\n    )\n};\n\nResultContent.propTypes = {\n    viewMyResult: PropTypes.func.isRequired,\n};\n\nexport default ResultContent;","const getMaskProductResult = (Questions, currentAnswer) => {\n    let productsRecommend = [];\n\n    const skinFeelO = Questions[0].answers;\n    const skinFeelA = currentAnswer[1];\n    const waterO = Questions[1].answers;\n    const waterA = currentAnswer[2];\n\n    const climateO = Questions[2].answers;\n    const climateA = currentAnswer[3];\n\n    const skinConcertO = Questions[3].answers;\n    const skinConcertA = currentAnswer[4];\n\n    switch (skinFeelA) {\n        case skinFeelO[0]:\n            switch (skinConcertA) {\n                case skinConcertO[0]:\n                    switch (climateA) {\n                        case climateO[0]:\n                            switch (waterA) {\n                                case waterO[0]:\n                                    productsRecommend = ['TSW Mask'];\n                                    break;\n                                case waterO[1]:\n                                    productsRecommend = ['TSW Mask'];\n                                    break;\n                                case waterO[2]:\n                                    productsRecommend = ['APC Mask'];\n                                    break;\n                                case waterO[3]:\n                                    productsRecommend = ['APC Mask'];\n                                    break;\n                            }\n                            break;\n                        case climateO[1]:\n                            switch (waterA) {\n                                case waterO[0]:\n                                    productsRecommend = ['TSW Mask'];\n                                    break;\n                                case waterO[1]:\n                                    productsRecommend = ['TSW Mask'];\n                                    break;\n                                case waterO[2]:\n                                    productsRecommend = ['APC Mask'];\n                                    break;\n                                case waterO[3]:\n                                    productsRecommend = ['APC Mask'];\n                                    break;\n                            }\n                            break;\n                        case climateO[2]:\n                            productsRecommend = ['TSW Mask'];\n                            break;\n                        case climateO[3]:\n                            productsRecommend = ['APC Mask'];\n                            break;\n                    }\n                    break;\n                case skinConcertO[1]:\n                    productsRecommend = ['AEA Mask'];\n                    break;\n                case skinConcertO[2]:\n                    switch (waterA) {\n                        case waterO[0]:\n                            productsRecommend = ['TSW Mask'];\n                            break;\n                        case waterO[1]:\n                            productsRecommend = ['TSW Mask'];\n                            break;\n                        default:\n                            productsRecommend = ['AEA Mask'];\n                            break;\n                    }\n                    break;\n                case skinConcertO[3]:\n                    productsRecommend = ['TSW Mask'];\n                    break;\n                case skinConcertO[4]:\n                    productsRecommend = ['OC Mask'];\n                    break;\n                case skinConcertO[5]:\n                    switch (climateA) {\n                        case climateO[0]:\n                            switch (waterA) {\n                                case waterO[0]:\n                                    productsRecommend = ['OC Mask'];\n                                    break;\n                                case waterO[1]:\n                                    productsRecommend = ['OC Mask'];\n                                    break;\n                                default:\n                                    productsRecommend = ['APC Mask'];\n                                    break;\n                            }\n                            break;\n                        case climateO[1]:\n                            switch (waterA) {\n                                case waterO[0]:\n                                    productsRecommend = ['OC Mask'];\n                                    break;\n                                case waterO[1]:\n                                    productsRecommend = ['OC Mask'];\n                                    break;\n                                default:\n                                    productsRecommend = ['APC Mask'];\n                                    break;\n                            }\n                            break;\n                        default:\n                            switch (waterA) {\n                                case waterO[0]:\n                                    productsRecommend = ['OC Mask'];\n                                    break;\n                                case waterO[1]:\n                                    productsRecommend = ['OC Mask'];\n                                    break;\n                                default:\n                                    productsRecommend = ['APC Mask'];\n                                    break;\n                            }\n                            break;\n                    }\n                    break;\n            }\n            break;\n        case skinFeelO[1]:\n            switch (skinConcertA) {\n                case skinConcertO[0]:\n                    switch (climateA) {\n                        case climateO[0]:\n                            switch (waterA) {\n                                case waterO[0]:\n                                    productsRecommend = ['APC Mask'];\n                                    break;\n                                case waterO[1]:\n                                    productsRecommend = ['APC Mask'];\n                                    break;\n                                default:\n                                    productsRecommend = ['OC Mask'];\n                                    break;\n                            }\n                            break;\n                        case climateO[1]:\n                            switch (waterA) {\n                                case waterO[0]:\n                                    productsRecommend = ['APC Mask'];\n                                    break;\n                                case waterO[1]:\n                                    productsRecommend = ['APC Mask'];\n                                    break;\n                                default:\n                                    productsRecommend = ['OC Mask'];\n                                    break;\n                            }\n                            break;\n                        default:\n                            productsRecommend = ['OC Mask'];\n                            break;\n                    }\n                    break;\n                case skinConcertO[1]:\n                    switch (waterA) {\n                        case waterO[0]:\n                            productsRecommend = ['TSW Mask'];\n                            break;\n                        case waterO[1]:\n                            productsRecommend = ['TSW Mask'];\n                            break;\n                        default:\n                            productsRecommend = ['AEA Mask'];\n                            break;\n                    }\n                    break;\n                case skinConcertO[2]:\n                    productsRecommend = ['AEA Mask'];\n                    break;\n                case skinConcertO[3]:\n                    switch (climateA) {\n                        case climateO[0]:\n                            switch (waterA) {\n                                case waterO[0]:\n                                    productsRecommend = ['TSW Mask'];\n                                    break;\n                                case waterO[1]:\n                                    productsRecommend = ['TSW Mask'];\n                                    break;\n                                default:\n                                    productsRecommend = ['APC Mask'];\n                                    break;\n                            }\n                            break;\n                        case climateO[1]:\n                            switch (waterA) {\n                                case waterO[0]:\n                                    productsRecommend = ['TSW Mask'];\n                                    break;\n                                case waterO[1]:\n                                    productsRecommend = ['TSW Mask'];\n                                    break;\n                                default:\n                                    productsRecommend = ['APC Mask'];\n                                    break;\n                            }\n                            break;\n                        default:\n                            productsRecommend = ['TSW Mask'];\n                            break;\n                    }\n                    break;\n                case skinConcertO[4]:\n                    productsRecommend = ['OC Mask'];\n                    break;\n                case skinConcertO[5]:\n                    switch (climateA) {\n                        case climateO[0]:\n                            switch (waterA) {\n                                case waterO[0]:\n                                    productsRecommend = ['APC Mask'];\n                                    break;\n                                case waterO[1]:\n                                    productsRecommend = ['APC Mask'];\n                                    break;\n                                default:\n                                    productsRecommend = ['OC Mask'];\n                                    break;\n                            }\n                            break;\n                        case climateO[1]:\n                            switch (waterA) {\n                                case waterO[0]:\n                                    productsRecommend = ['APC Mask'];\n                                    break;\n                                case waterO[1]:\n                                    productsRecommend = ['APC Mask'];\n                                    break;\n                                default:\n                                    productsRecommend = ['OC Mask'];\n                                    break;\n                            }\n                            break;\n                        default:\n                            switch (waterA) {\n                                case waterO[0]:\n                                    productsRecommend = ['APC Mask'];\n                                    break;\n                                case waterO[1]:\n                                    productsRecommend = ['APC Mask'];\n                                    break;\n                                default:\n                                    productsRecommend = ['OC Mask'];\n                                    break;\n                            }\n                            break;\n                    }\n                    break;\n            }\n            break;\n        case skinFeelO[2]:\n            switch (skinConcertA) {\n                case skinConcertO[0]:\n                    productsRecommend = ['APC Mask'];\n                    break;\n                case skinConcertO[1]:\n                    switch (waterA) {\n                        case waterO[0]:\n                            productsRecommend = ['TSW Mask'];\n                            break;\n                        case waterO[1]:\n                            productsRecommend = ['TSW Mask'];\n                            break;\n                        default:\n                            productsRecommend = ['AEA Mask'];\n                            break;\n                    }\n                    break;\n                case skinConcertO[2]:\n                    productsRecommend = ['AEA Mask'];\n                    break;\n                case skinConcertO[3]:\n                    switch (climateA) {\n                        case climateO[2]:\n                            productsRecommend = ['APC Mask'];\n                            break;\n                        case climateO[3]:\n                            productsRecommend = ['APC Mask'];\n                            break;\n                        default:\n                            switch (waterA) {\n                                case waterO[0]:\n                                    productsRecommend = ['TSW Mask'];\n                                    break;\n                                case waterO[1]:\n                                    productsRecommend = ['TSW Mask'];\n                                    break;\n                                default:\n                                    productsRecommend = ['APC Mask'];\n                                    break;\n                            }\n                            break;\n                    }\n                    break;\n                case skinConcertO[4]:\n                    productsRecommend = ['OC Mask'];\n                    break;\n                case skinConcertO[5]:\n                    switch (climateA) {\n                        case climateO[2]:\n                            switch (waterA) {\n                                case waterO[0]:\n                                    productsRecommend = ['APC Mask'];\n                                    break;\n                                case waterO[1]:\n                                    productsRecommend = ['APC Mask'];\n                                    break;\n                                default:\n                                    productsRecommend = ['OC Mask'];\n                                    break;\n                            }\n                            break;\n                        case climateO[3]:\n                            switch (waterA) {\n                                case waterO[0]:\n                                    productsRecommend = ['APC Mask'];\n                                    break;\n                                case waterO[1]:\n                                    productsRecommend = ['APC Mask'];\n                                    break;\n                                default:\n                                    productsRecommend = ['OC Mask'];\n                                    break;\n                            }\n                            break;\n                        default:\n                            switch (waterA) {\n                                case waterO[0]:\n                                    productsRecommend = ['APC Mask'];\n                                    break;\n                                case waterO[1]:\n                                    productsRecommend = ['APC Mask'];\n                                    break;\n                                default:\n                                    productsRecommend = ['OC Mask'];\n                                    break;\n                            }\n                            break;\n                    }\n            }\n            break;\n        case skinFeelO[3]:\n            switch (skinConcertA) {\n                case skinConcertO[0]:\n                    switch (climateA) {\n                        case climateO[2]:\n                            productsRecommend = ['OC Mask'];\n                            break;\n                        case climateO[3]:\n                            productsRecommend = ['APC Mask'];\n                            break;\n                        default:\n                            switch (waterA) {\n                                case waterO[0]:\n                                    productsRecommend = ['APC Mask'];\n                                    break;\n                                case waterO[1]:\n                                    productsRecommend = ['APC Mask'];\n                                    break;\n                                default:\n                                    productsRecommend = ['OC Mask'];\n                                    break;\n                            }\n                            break;\n                    }\n                    break;\n                case skinConcertO[1]:\n                    switch (climateA) {\n                        case climateO[3]:\n                            productsRecommend = ['OC Mask'];\n                            break;\n                        default:\n                            productsRecommend = ['AEA Mask'];\n                            break;\n                    }\n                    break;\n                case skinConcertO[2]:\n                    productsRecommend = ['AEA Mask'];\n                    break;\n                case skinConcertO[3]:\n                    productsRecommend = ['TSW Mask'];\n                    break;\n                case skinConcertO[4]:\n                    productsRecommend = ['OC Mask'];\n                    break;\n                case skinConcertO[5]:\n                    productsRecommend = ['OC Mask'];\n                    break;  \n            }\n            break;\n        case skinFeelO[4]:\n            switch (skinConcertA) {\n                case skinConcertO[0]:\n                    productsRecommend = ['APC Mask'];\n                    break;\n                case skinConcertO[1]:\n                    productsRecommend = ['TSW Mask'];\n                    break;\n                case skinConcertO[2]:\n                    productsRecommend = ['AEA Mask'];\n                    break;\n                case skinConcertO[3]:\n                    productsRecommend = ['TSW Mask'];\n                    break;\n                case skinConcertO[4]:\n                    productsRecommend = ['OC Mask'];\n                    break;\n                case skinConcertO[5]:\n                    productsRecommend = ['OC Mask'];\n                    break;\n            }\n            break;\n    }\n   \n\treturn { productsRecommend }\n};\n\nexport default getMaskProductResult;","import React, { useEffect, useRef, useState } from 'react';\nimport '../../survey.scss';\n\nimport Questions from \"../../modules/mask-questions\";\nimport QuestionBox from \"../components/QuestionBox\";\nimport SingleChoice from '../components/SingleChoice';\nimport MultipleChoice from '../components/MultipleChoice';\nimport EmailForm from '../components/EmailForm2';\nimport ResultContent from '../components/ResultContent2';\n\nimport {\n    setCookie,\n    getCookie,\n    decodeAnswers,\n    postMessageData,\n    postMessageCookie,\n    getCookieAnsweredQuestion,\n    setCookieAnsweredQuestion,\n    postMessageToParentCookie,\n} from \"../../modules/Utils\";\n\nimport { useSearchParams } from \"react-router-dom\";\n\nimport { ReactComponent as LoaderSvg } from '../../assets/loader.svg';\nimport getMaskProductResult from '../../modules/mask-product-result';\nimport productList from '../../modules/product-list';\n\nwindow.getCookie = getCookie;\n\nconst SurveyMask = () => {\n    const [searchParams] = useSearchParams();\n    const site = searchParams.get('site');\n    const gId = searchParams.get('gaid');\n    const surveyState = searchParams.get('state');\n    const targetRef = useRef();\n\n    // INITIAL DATA\n    let initialState = getCookie('surveyPosition') || 'start';\n    if (surveyState === 'started' && (getCookie('surveyPosition') === 'start' || getCookie('surveyPosition') === null || getCookie('surveyPosition') === '')) {\n        postMessageData(site, 'SurveyMask', 'started');\n        initialState = 'question-1';\n        setCookie('answeredQuestion', '');\n    }\n    const initialCurrentQuestion = getCookie('currentQuestion') ? parseInt(getCookie('currentQuestion'), 10) : 1;\n    const initialSubmitted = getCookie('quizEmail') ? true : false;\n    const answerData = getCookieAnsweredQuestion('getCookieAnsweredQuestionMask') ? getCookieAnsweredQuestion('getCookieAnsweredQuestionMask') : {};\n\n    // INITIAL STATES\n    const [currentPosition, setPosition] = useState(initialState);\n\tconst [currentQuestion, setQuestion] = useState(initialCurrentQuestion);\n    const [currentAnswer, setAnswer] = useState(answerData);\n    const [submitted, setSubmitted] = useState(initialSubmitted);\n    const [redirect, setRedirect] = useState(false);\n    const [email, setEmail] = useState('');\n    const additionalStep = true;\n\n    const classes = currentPosition !== 'result' ? 'px-g' : 'overflow-hidden';\n\n    const startQuiz = () => {\n        postMessageData(site, 'SurveyMask', 'started');\n        setPosition('question-1');\n    };\n\n    const setFinished = () => {\n        setCookie('surveyPosition', 'finished');\n        setPosition('finished');\n    }\n\n    const clearCookie = () => {\n        setCookie('currentQuestion', 1);\n        setCookie('surveyPosition', 'start');\n        setCookie('answeredQuestion', '');\n        postMessageCookie(site, 'currentQuestion', 1);\n        postMessageCookie(site, 'surveyPosition', 'start');\n        postMessageCookie(site, 'answeredQuestion', '');\n    }\n\n    const answerAction = (question, answers) => {\n        console.log('answerAction', question, answers)\n        currentAnswer[question] = answers;\n        setAnswer(decodeAnswers(currentAnswer));\n        setCookieAnsweredQuestion(site, decodeAnswers(currentAnswer));\n        console.log('currentAnswer2', currentAnswer)\n    };\n\n    const skipEmail = () => {\n        // gettingResult(true, true);\n        setSubmitted(true);\n    }\n\n    const viewMyResult = () => {\n        setRedirect(true);\n        postMessageGaParent();\n        gettingResult(true);\n    }\n\n    const onSubmit = (emailtoSave) => {\n        console.log('emailtoSave', emailtoSave)\n        setCookie('quizEmail', emailtoSave);\n        setEmail(emailtoSave);\n        setSubmitted(true);\n        postMessageToParentCookie(site, 'quizEmail', email, site);\n        setTimeout(() => { saveData(); })\n        console.log('email3', email);\n        if (window.top !== window.self) {\n            window.parent.postMessage({\n                'func': 'callGaEvent',\n                'category': 'SurveyMask',\n                'action': 'submitEmail',\n                'label': email,\n            }, `https://${site}`);\n        }\n    }\n\n    const setQuestionState = (questionIndex) => {\n        if (questionIndex <= Questions.length) {\n            const targetQuestion = Questions[questionIndex];\n            if (targetQuestion && targetQuestion.rule && targetQuestion.rule.skipped) {\n                const targetAnswer = decodeAnswers(currentAnswer)[targetQuestion.rule.question];\n                if (targetAnswer === targetQuestion.rule.answer) {\n                    answerAction(questionIndex, '');\n                    const targetQuestionIndex = currentQuestion < questionIndex ? questionIndex + 1 : questionIndex - 1;\n                    setQuestion(targetQuestionIndex);\n                } else {\n                    setQuestion(questionIndex);\n                }\n            } else {\n                setQuestion(questionIndex);\n            }\n        } else if (questionIndex >= Questions.length) {\n            console.log('finish', currentPosition);\n            postMessageGaParent();\n            if (additionalStep) {\n                setFinished();\n                if (submitted) gettingResult(true);\n            }\n        }\n    }\n\n    const saveData = () => {\n        console.log('email to save', getCookie('quizEmail'))\n        const dataForSaving = {};\n        for (const [key, value] of Object.entries(currentAnswer)) {\n            const idxQ = key - 1;\n            if (Questions[idxQ]) {\n                const questionText = `${key}: ${Questions[idxQ].question}`;\n                dataForSaving[questionText] = value;\n            }\n        }\n\n        const { productsRecommend } = getMaskProductResult(Questions, currentAnswer);\n        const productHandle = [];\n        const productSkus = [];\n        let sku = '';\n        productsRecommend.forEach((item, index) => {\n            productHandle.push(productList[item].handle);\n            productSkus.push(productList[item].sku);\n            sku = `${sku}${index === 0 ? '' : ','}${productList[item].sku}`;\n        });\n\n        const data = { _ga: gId, questions_answers: dataForSaving, email: getCookie('quizEmail'), sku, quiz_type: 'mask' };\n        fetch('https://api.sandandsky.com/surveys', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data),\n        });\n    }\n\n    const postMessageGaParent = () => {\n        if (window.top === window.self) return;\n        const gaAnswers = decodeAnswers(currentAnswer)\n        const keys = Object.keys(gaAnswers);\n\n        postMessageData(site, 'SurveyMask', 'completed');\n        postMessageCookie(site, 'surveySubmitNew', 'true');\n\n        keys.forEach((key,index) => {\n            const q = Questions[index];\n            const a = gaAnswers[key];\n            const label = q.question;\n            const action = typeof(a) === 'object' ? a.join(',') : a;\n            postMessageData(site, 'SurveyMask', action, label);\n        });\n    }\n\n    const gettingResult = (close = false, save = false) => {\n        const selectedSite = site ? site : 'dev.sandandsky.com';\n        const { productsRecommend } = getMaskProductResult(Questions, currentAnswer);\n        console.log('currentAnswer', currentAnswer, productsRecommend);\n\n        if (save) saveData();\n\n        if (close) {\n            setCookie('surveyPosition', 'finished');\n            setPosition('finished');\n            postMessageCookie(site, 'surveyPosition', 'finished');\n\n            const productHandle = [];\n            const productSkus = [];\n            productsRecommend.forEach((item, index) => {\n                productHandle.push(productList[item].handle);\n                productSkus.push(productList[item].sku);\n            });\n\n            const surveyResultObj = {\n                productsRecommend,\n                productHandle,\n                productSkus,\n                productHandle,\n                productSkus,\n            };\n            const surveyResultJson = JSON.stringify(surveyResultObj);\n            setCookie('surveyResult', surveyResultJson);\n            postMessageCookie(site, 'surveyResult', surveyResultJson);\n\n            setTimeout(function () {\n                setCookie('surveyPosition', 'result');\n                setPosition('result');\n                postMessageCookie(site, 'surveyPosition', 'result');\n                setCookie('surveyResult', surveyResultJson);\n                postMessageCookie(site, 'surveyResult', surveyResultJson);\n                clearCookie();\n                if (window.top !== window.self) {\n                    setTimeout(function () {\n                        window.top.location.href = `https://${selectedSite}/pages/survey-result-mask/`;\n                    }, 500);\n                } else {\n                    window.location.href = '/survey-result-mask';\n                }\n            }, 1500);\n        }\n    }\n\n    return (\n        <div ref={targetRef} className={`survey-mask ${currentPosition === 'start' ? 'cover' : classes} ${currentPosition !== 'result' && currentPosition !== 'start' ? 'container' : ''}`}>\n            <div className={`row justify-content-center survey-content ${currentPosition === 'start' ? 'survey-content__start pt-4' : 'align-content-start'} `}>\n                { currentPosition === 'start' && (\n                    <>\n                        <div className='survey-mask__start-screen text-center mt-7 mt-lg-3'>\n                            <img className='tooltip' src=\"https://imagedelivery.net/ghVX8djKS3R8-n0oGeWHEA/5d327fa8-3567-48a0-177f-0f28bcaa3300/828x\" />\n                            <h1>Mask Quiz</h1>\n                            <button className=\"btn btn-primary text-white\" onClick={() => startQuiz()}>Take the quiz</button>\n                        </div>\n                    </>\n                )}\n                { currentPosition !== 'start'\n                    && currentPosition !== 'finished'\n                    && currentPosition !== 'result' && (\n                    <>\n                        <div className=\"text-center position-relative\">\n                            {Questions.map((item, index) => {\n                                const key = `question-${index}`;\n                                if (currentQuestion === index + 1) {\n                                    switch(item.type) {\n                                        case 'MultipleChoice':\n                                            return (\n                                                <QuestionBox\n                                                    currentAnswer={decodeAnswers(currentAnswer)}\n                                                    totalQuestions={item.answers.length}\n                                                    totalSteps={Questions.length}\n                                                    answerAction={answerAction}\n                                                    setCurrentQuestion={setQuestionState}\n                                                    currentQuestion={currentQuestion}\n                                                    key={key}\n                                                    colSize='col-lg-8 offset-lg-2 col-xl-6 offset-xl-3'\n                                                    question={item.question}\n                                                    questionNote={item.questionNote}\n                                                    caption={item.caption ? item.caption : ''}\n                                                    captionClass={item.captionClass ? item.captionClass : ''}\n                                                    category={item.category}\n                                                    progressBarType='2'\n                                                    >\n                                                    <MultipleChoice answers={item.answers}\n                                                        lastFull={item.lastFull}\n                                                        maxChoose={item.maxChoose}\n                                                        lastDisableForAll={item.lastDisableForAll}\n                                                        btnClass={item.btnClass}\n                                                        />\n                                                </QuestionBox>\n                                            );\n                                        default:\n                                            return (\n                                                <QuestionBox\n                                                    currentAnswer={decodeAnswers(currentAnswer)}\n                                                    // width={width}\n                                                    // height={height}\n                                                    totalQuestions={item.answers.length}\n                                                    answerAction={answerAction}\n                                                    setCurrentQuestion={setQuestionState}\n                                                    currentQuestion={currentQuestion}\n                                                    totalSteps={Questions.length}\n                                                    key={key}\n                                                    colSize='col-lg-8 offset-lg-2 col-xl-6 offset-xl-3'\n                                                    question={item.question}\n                                                    questionNote={item.questionNote}\n                                                    caption={item.caption ? item.caption : ''}\n                                                    captionClass={item.captionClass ? item.captionClass : ''}\n                                                    category={item.category}\n                                                    defaultEnabled={item.inputType === 'RangeSlider' ? true : null}\n                                                    quizType=\"mask\"\n                                                    progressBarType='2'\n                                                    >\n                                                    <SingleChoice\n                                                        answers={item.answers}\n                                                        buttonType={item.buttonType}\n                                                        inputType={item.inputType}\n                                                        showAllLabel={item.showAllLabel}\n                                                        btnClass={item.btnClass}\n                                                        />\n                                                </QuestionBox>\n                                            );\n                                    }\n                                }\n                            })}\n                        </div>\n                    </>\n                )}\n\n                { (currentPosition === 'finished' && !submitted && !redirect) && (\n                    <EmailForm onSubmit={onSubmit} skipEmail={skipEmail}/>\n                )}\n\n                { currentPosition === 'finished' && submitted && !redirect && (\n                    <ResultContent viewMyResult={viewMyResult}/>\n                )}\n\n                { ((currentPosition === 'finished' || currentPosition === 'result') && redirect) && (\n\t\t\t\t\t<div className=\"question-box analyzing d-flex justify-content-center align-items-center flex-column\">\n\t\t\t\t\t\t<p className=\"question-box__title\">Analysing your answers</p>\n\t\t\t\t\t\t<LoaderSvg className=\"loader mt-0 mb-0\"/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n            </div>\n        </div>\n    )\n};\n\nexport default SurveyMask;\n"],"names":["question","questionNote","answers","type","inputType","showAllLabel","category","btnClass","buttonType","props","onSubmit","skipEmail","useState","email","setEmail","isValidEmail","setIsValidEmail","termChecked","setTermCheck","className","dangerouslySetInnerHTML","__html","e","preventDefault","placeholder","onChange","validateEmail","target","value","htmlFor","id","checked","disabled","href","onClick","viewMyResult","Questions","currentAnswer","productsRecommend","skinFeelO","skinFeelA","waterO","waterA","climateO","climateA","skinConcertO","skinConcertA","window","getCookie","useSearchParams","searchParams","site","get","gId","surveyState","targetRef","useRef","initialState","postMessageData","setCookie","initialCurrentQuestion","parseInt","initialSubmitted","answerData","getCookieAnsweredQuestion","currentPosition","setPosition","currentQuestion","setQuestion","setAnswer","submitted","setSubmitted","redirect","setRedirect","classes","clearCookie","postMessageCookie","answerAction","console","log","decodeAnswers","setCookieAnsweredQuestion","setQuestionState","questionIndex","targetQuestion","rule","skipped","answer","postMessageGaParent","gettingResult","saveData","dataForSaving","Object","entries","key","idxQ","getMaskProductResult","productHandle","productSkus","sku","forEach","item","index","push","productList","handle","data","_ga","questions_answers","quiz_type","fetch","method","headers","body","JSON","stringify","top","self","gaAnswers","keys","q","a","label","action","join","close","save","selectedSite","surveyResultObj","surveyResultJson","setTimeout","location","ref","src","QuestionBox","totalQuestions","length","totalSteps","setCurrentQuestion","colSize","caption","captionClass","progressBarType","MultipleChoice","lastFull","maxChoose","lastDisableForAll","defaultEnabled","quizType","SingleChoice","emailtoSave","postMessageToParentCookie","parent","postMessage"],"sourceRoot":""}